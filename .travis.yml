language: cpp
dist: xenial
notifications:
  email: false

# Define builds on mulitple OS/compiler combinations. 
# Feel free to add/remove entries from this list.
matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lcov
            - g++-7

      env:
        - MATRIX_EVAL="CXX_COMPILER=g++-7; sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-7 90"

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lcov
            - g++-4.9

      env:
        - MATRIX_EVAL="CXX_COMPILER=g++-4.9"

    - os: linux
      compiler: clang
      addons:
        apt:
          packages:
            - lcov

      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++"
    

before_install:
  - eval "${MATRIX_EVAL}"
  - PARENTDIR=$(pwd)
  - mkdir $PARENTDIR/build $HOME/cpm
  # Install a supported cmake version (>= 3.14)
  - wget -O cmake.sh https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh
  - sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local
  - export PATH=/usr/local/bin:$PATH
  - cmake --version


install:
  - cd $PARENTDIR/build
  - cmake $PARENTDIR -DCMAKE_BUILD_TYPE=Coverage -DCMAKE_CXX_COMPILER=$CXX_COMPILER -DCPM_SOURCE_CACHE=$HOME/cpm
  - make

script:
  - make coverage

after_success:
  - cd $PARENTDIR/build
  - lcov --list coverage_out.info.cleaned  # Show test report in travis log.
  # Install coverals gem for uploading coverage to coveralls.
  - gem install coveralls-lcov
  - bash <(curl -s https://codecov.io/bash) -f coverage_out.info.cleaned || echo "Codecov did not collect coverage reports"
